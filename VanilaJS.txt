var : 동일변수를 재선언 해서 값 변경 가능
let :  동일변수 재선언 불가
const : 상수, 변수의 값 수정 불가


data Type -> Float : 소수 


정렬 하는 모든 데이터 사이에는  " , " 꼭 사용!!
data 정렬 - Array(List , 순서가 있는 정렬, 변수도 저장)  const datArray = []; 
		
data 정렬 : Object( 순서가 없는 정렬,여러 데이터를 집단으로 묶어서 정렬) 
	클래스와 같이 사용할수 있다.
	각 value 에 값을 줄수 있다! 
	const manInfo = {name : "" ,
		age : 22};
	manInfo.name  으로 특정  데이터에만 접근 가능
	->Array와 Object 를 섞어서 사용 가능!! 
	-> Object 안에 Array / Array 안에 Object 가능 !! 
	=> 상황에 맞는 데이터형식/정렬을 찾아서 사용

	//Object -> Class 생성자 함수로 만들어 낸것과 같음  //
변수명은 Camel Case  ex) dayOfWeek



String 에 변수 추가해서 사용
	1. '+'기호로 연결
	2. ','기호로 연결
	3. ``기호로 묶고 중간 마다 &{변수명} 사용
	ex) `hello &{name}`

//클래스 생성자  ->클래스 생성자 != 클래스 
//클래스 생성자의 메소드는 클래스를 생성하기 전에 접근 불가능 

DOM - document Object Model  -> HTML을 JS의 객체로 가져옴

console.log 대신 console.dir 을 사용하면 해당 객체의 속성을 모두 볼 수 있다.

HTML에서 script태그가 body태그 최하단에 위치해야 하는 이유 :
	1. HTML을 읽는 과정에서 중간에 스크립트를 만나면 스크립트 로드와 실행을 중단되는
	시점이 생기고, 그에 따라 그 만큼 Display에 표시되는 것이 지연되게 된다.
	2. HTML 파싱이 끝나고 DOM트리가 생기기 전 자바스크립트 실행되어 DOM 조작을 할 
	경우 에러(null)가 발생할 수 있다.




오브젝트 ( window, 태그 , HTML 로 받아드린 객체 등등) 

오브젝트.addEventListener()를 통해 이벤트를 받을 수 있다. 
("이벤트이름",호출함수)를 인자로 받으며 호출함수는 함수 반드시 이름만 작성
-> 인자까지 적을 경우 혹은 ()까지 적을경우 이벤트발생과 관련없이 함수 호출
-> 자동으로 event 라는 인자가 같이 인자로 넘어감 
-> 함수 선언에서 매개변수를 설정하면 해당 이벤트 접근 가능


JS , CSS , HTML  은 각각 서로의 정보를 나누어 저장
JS에 CSS 정보를 수정하려고 할때 태그에 클래스네임을 지정하여 간접적으로 수정하자 

html의 클래스 선택자 지정 ->리스트로 여러개 중복하여 한 태그에 여러 클래스 적용 가능

Object.classList.toggle(x); x가 존재하면 remove하고 x가 없으면 add 함 
-> if()add else remove 두개 합친거처럼

setInterval( 함수 , 반복간격)  -> 해당 함수를 반복간격마다 자동으로 실행함 ->반복간격은 1000=1초 


dom.qureySelector -> 해당 선택자에 맞는 걸 찾고 찾은 첫번째 객체만 반환
dom.qureySelectorAll ->해당 선택자에 맞는 걸 찾고 모든 객체만 반환 => array type data


Local Storage : JS의 데이터를 사용자의 브라우저를 통해 저장하는것  
/// 브라우저가 꺼질 때 까지 저장

Form 태그에 입력을 하면 페이지가 새로고침 된다. 
event.preventDefault(); -> event에 지정된 디폴트 이벤트 처리기를 없앰 
태그.appendChild(추가할 태그) -> 해당 태그에 추가할 태그를 자식으로 추가함 